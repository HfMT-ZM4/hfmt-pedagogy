{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 7,
			"minor" : 3,
			"revision" : 3,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"rect" : [ 406.0, 79.0, 766.0, 717.0 ],
		"editing_bgcolor" : [ 0.9, 0.9, 0.9, 1.0 ],
		"bglocked" : 0,
		"openinpresentation" : 0,
		"default_fontsize" : 12.0,
		"default_fontface" : 0,
		"default_fontname" : "Arial",
		"gridonopen" : 1,
		"gridsize" : [ 15.0, 15.0 ],
		"gridsnaponopen" : 1,
		"objectsnaponopen" : 1,
		"statusbarvisible" : 2,
		"toolbarvisible" : 1,
		"lefttoolbarpinned" : 0,
		"toptoolbarpinned" : 0,
		"righttoolbarpinned" : 0,
		"bottomtoolbarpinned" : 0,
		"toolbars_unpinned_last_save" : 0,
		"tallnewobj" : 0,
		"boxanimatetime" : 200,
		"enablehscroll" : 1,
		"enablevscroll" : 1,
		"devicewidth" : 0.0,
		"description" : "",
		"digest" : "",
		"tags" : "",
		"style" : "",
		"subpatcher_template" : "",
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-5",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 408.0, 585.0, 128.0, 22.0 ],
					"style" : "",
					"text" : "out 2 @comment step"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 419.0, 23.0, 177.0, 22.0 ],
					"style" : "",
					"text" : "in 2 @comment length-of-scale"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 50.0, 14.0, 161.0, 22.0 ],
					"style" : "",
					"text" : "in 1 @comment scale-step"
				}

			}
, 			{
				"box" : 				{
					"code" : "instep = in1;\r\nscalelen = in2;\r\n\r\n/*\r\n\tkeep index in range with modulo\r\n\tsince we know we are dealing with \r\n\tsteps in a scale we can safely use the\r\n\ttrunc() function to avoid floating point\r\n\trounding errors\r\n*/\r\n\r\nstep = trunc(instep % scalelen);\r\n\r\n/*\r\n\tfind the octave number and convert it \r\n\tto steps by multiplying it by 12. \r\n\twe use floor() here to make sure that \r\n\twe round down in case of negative steps\r\n*/\r\noctave = floor(instep / scalelen) * 12;\r\n\r\n/* \r\n\tsince the modulo step for -1 is -1, \r\n\twe have to flip the direction so that\r\n\ta step of -1 is one less than the scalelen \r\n\t(i.e. the last step of the scale)\r\n*/ \r\nif( step < 0 )\r\n{\r\n\tstep += scalelen;\r\n}\r\n\r\nout1 = octave;\r\nout2 = step;\r\n",
					"fontface" : 0,
					"fontname" : "Arial",
					"fontsize" : 12.0,
					"id" : "obj-3",
					"maxclass" : "codebox",
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 50.0, 60.0, 377.0, 507.0 ],
					"style" : ""
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 50.0, 585.0, 141.0, 22.0 ],
					"style" : "",
					"text" : "out 1 @comment octave"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 0 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 1 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-3", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 0 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-3", 1 ]
				}

			}
 ],
		"autosave" : 0
	}

}
